{
	"info": {
		"_postman_id": "2fe04108-ba03-4f9f-96e6-1ea55a2342a5",
		"name": "epa_24_03_09",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26701489"
	},
	"item": [
		{
			"name": "Get and save Token",
			"item": [
				{
					"name": "Register admin",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"George\",\r\n  \"nickName\": \"@igor\",\r\n  \"city\": \"Miami\",\r\n  \"email\": \"igor@yandex.ru\",\r\n  \"password\": \"ironman\",\r\n  \"birthday\": \"2024-03-07\",\r\n  \"role\": \"ROLE_ADMIN\",\r\n  \"position\": \"general_director\",\r\n  \"department\": \"cybersecurity\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/public/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"access_token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"igor@yandex.ru\",\r\n  \"password\": \"ironman\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/public/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"public",
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee",
			"item": [
				{
					"name": "add employee 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test employee 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 3').to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Ivanov Ivan Ivanovich\",\r\n  \"email\": \"mail@mail.ru\",\r\n  \"password\": \"password1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee fail name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500 or 400\", function () {\r",
									"     pm.expect(pm.response.code).to.be.oneOf([500,400]);\r",
									"});\r",
									"pm.test(\"Has error response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Ivan\",\r\n  \"email\": \"mail@mail.ru\",\r\n  \"password\": \"password1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee fail email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500 or 400\", function () {\r",
									"     pm.expect(pm.response.code).to.be.oneOf([500,400]);\r",
									"});\r",
									"pm.test(\"Has error response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Ivanov Ivan Ivanovich\",\r\n  \"email\": \"mail@mail..ru\",\r\n  \"password\": \"password1\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "update employee 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.be.ok;\r",
									"});\r",
									"pm.test(\"Has employee update response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test employee 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 3').to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Ivanov John Ivanovich\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/employees/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"employees",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "update employee unknown",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([500, 404]);\r",
									"});\r",
									"pm.test(\"Has error response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Ivanov John Ivanovich\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/employees/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"employees",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test employee 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 4').to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Ivanov Test Ivanovich\",\r\n  \"email\": \"mail2@mail.ru\",\r\n  \"password\": \"password2\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "get All employees",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.be.ok;\r",
									"});\r",
									"pm.test(\"Test list employee response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 4').to.eql(4);\r",
									"});\r",
									"pm.test(\"Test employee[2] 'fullName' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[2]).to.have.property('fullName');\r",
									"    pm.expect(jsonData[2].fullName, '\"fullName\" must be \"Ivanov John Ivanovich\"').to.eql(\"Ivanov John Ivanovich\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "get employee 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.be.ok;\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/employees/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"employees",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete employee 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/admin/employees/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"employees",
								"3"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "add project 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has project create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test project 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Developer sharks\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "add project 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has project create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test project 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 2').to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Googlez\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test employee 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 5').to.eql(5);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Oklahom Boris Jovanski\",\r\n  \"nickName\": \"@appalachi\",\r\n  \"email\": \"obj@yahoo.com\",\r\n  \"password\": \"oklahomchik\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test employee 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 6').to.eql(6);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Bogdan Hmelnitskii\",\r\n  \"nickName\": \"@kazak\",\r\n  \"email\": \"hmel@ukr.net\",\r\n  \"password\": \"good_getman\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test employee 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 7').to.eql(7);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"Recsar Evilskii\",\r\n  \"nickName\": \"@klyk\",\r\n  \"email\": \"ork@orda.net\",\r\n  \"password\": \"hereisall\"\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/admin/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee 5 to project 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Has employee create response\", function () {",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/projects/1?employeeId=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"projects",
								"1"
							],
							"query": [
								{
									"key": "employeeId",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee 6 to project 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/projects/1?employeeId=6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"projects",
								"1"
							],
							"query": [
								{
									"key": "employeeId",
									"value": "6"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add employee 7 to project 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/projects/2?employeeId=7",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"projects",
								"2"
							],
							"query": [
								{
									"key": "employeeId",
									"value": "7"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get admin projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "get project 1 employees",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/projects/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"projects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get project 2 employees",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/projects/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"projects",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "update project 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Has project create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test project 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Developer sheeps\",\r\n    \"status\":\"COMPLETED\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/projects/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"projects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get project 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/projects/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"projects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "get admin projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Has employee create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzdHJpbmcyIiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImV4cCI6MTcwOTgzODgyMywiaWF0IjoxNzA5ODM1MjIzfQ.MVtErFQewOYQ_1HAZ_xDCepfykfHSgCzddPx_UeEe98",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"projects"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create task1 admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create task\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.name).to.eql('task1');\r",
									"    pm.expect(jsonData.description).to.eql('task1 description');\r",
									"    pm.expect(jsonData.deadLine).to.eql(\"2246-08-20\");\r",
									"    pm.expect(jsonData.basicPoints).to.eql(100);\r",
									"    pm.expect(jsonData.penaltyPoints).to.eql(5);    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"task1\",\n  \"description\": \"task1 description\",\n  \"projectId\": 1,\n  \"creatorId\": 1,\n  \"executorId\": 4,\n  \"deadLine\": \"2246-08-20\",\n  \"basicPoints\": 100,\n  \"penaltyPoints\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create task2 admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"Test create task\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"    pm.expect(jsonData.name).to.eql('task2');\r",
									"    pm.expect(jsonData.description).to.eql('task2 description');\r",
									"    pm.expect(jsonData.deadLine).to.eql(\"2226-08-20\");\r",
									"    pm.expect(jsonData.basicPoints).to.eql(100);\r",
									"    pm.expect(jsonData.penaltyPoints).to.eql(5);    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"task2\",\n  \"description\": \"task2 description\",\n  \"projectId\": 1,\n  \"creatorId\": 1,\n  \"executorId\": 4,\n  \"deadLine\": \"2226-08-20\",\n  \"basicPoints\": 100,\n  \"penaltyPoints\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all tasks admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Test list task\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(2);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "login",
								"value": "string2",
								"type": "text"
							},
							{
								"key": "password",
								"value": "stringst",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task By Id admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Test get task\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update task admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Test update task\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"u task1\",\n  \"description\": \"u task1 description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/tasks/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"tasks",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,204]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/admin/tasks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"tasks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Technologies",
			"item": [
				{
					"name": "get technologies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/admin/technologies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"technologies"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "remoteUrl",
			"value": "http://158.160.121.57:60606",
			"type": "string",
			"disabled": true
		}
	]
}