DROP TABLE IF EXISTS projects, employees, tasks, technologies, tasks_technologies, employees_technologies, subtasks,
 employees_tasks, courses, courses_technologies, employees_courses;

CREATE TABLE IF NOT EXISTS projects (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  CONSTRAINT pk_project PRIMARY KEY (id),
  CONSTRAINT uq_projects_for_name UNIQUE (name)
  );

CREATE TABLE IF NOT EXISTS employees (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  login VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  project_id BIGINT,
  birthday date NOT NULL,
  role VARCHAR(100) NOT NULL,
  CONSTRAINT pk_useremployee PRIMARY KEY (id),
  CONSTRAINT fk_comeve_on_project foreign key (project_id) references projects (id),
  CONSTRAINT uq_employees_name_login UNIQUE (login)
);

CREATE TABLE IF NOT EXISTS tasks (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  priority INTEGER NOT NULL,
  name VARCHAR(255) NOT NULL,
  duration INTEGER NOT NULL,
  start_date TIMESTAMP WITHOUT TIME ZONE,
  finish_date TIMESTAMP WITHOUT TIME ZONE,
  status VARCHAR(255),
  basic_points INTEGER NOT NULL,
  points INTEGER,
  CONSTRAINT pk_task PRIMARY KEY (id),
  CONSTRAINT uq_tasks_for_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS technologies (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  CONSTRAINT pk_technology PRIMARY KEY (id),
  CONSTRAINT uq_technologies_for_name UNIQUE (name)
  );

CREATE TABLE IF NOT EXISTS tasks_technologies (
  task_id BIGINT NOT null,
  technology_id BIGINT NOT NULL,
  CONSTRAINT pk_tasks_technologies primary key (task_id, technology_id),
  CONSTRAINT fk_comeve_on_task foreign key (task_id) references tasks (id),
  CONSTRAINT fk_comeve_on_technology foreign key (technology_id) references technologies (id)
);

CREATE TABLE IF NOT EXISTS employees_technologies (
  employee_id BIGINT not null,
  technology_id BIGINT NOT NULL,
  CONSTRAINT pk_employees_technologies primary key (employee_id, technology_id),
  CONSTRAINT fk_comeve_on_employee foreign key (employee_id) references employees (id),
  CONSTRAINT fk_comeve_on_technology foreign key (technology_id) references technologies (id)
);

CREATE TABLE IF NOT EXISTS subtasks (
  task_id BIGINT NOT null,
  subtask_id BIGINT NOT NULL,
  CONSTRAINT pk_stak_subtasks primary key (task_id, subtask_id),
  CONSTRAINT fk_comeve_on_task foreign key (task_id) references tasks (id),
  CONSTRAINT fk_comeve_on_subtask foreign key (subtask_id) references tasks (id)
);

CREATE TABLE IF NOT EXISTS employees_tasks (
  employee_id BIGINT NOT null,
  task_id BIGINT NOT null,
  CONSTRAINT pk_employees_tasks primary key (employee_id, task_id),
  CONSTRAINT fk_comeve_on_task foreign key (task_id) references tasks (id),
  CONSTRAINT fk_comeve_on_employee foreign key (employee_id) references employees (id)
);

CREATE TABLE IF NOT EXISTS courses (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  link VARCHAR(255),
  start_date TIMESTAMP WITHOUT TIME ZONE,
  finish_date TIMESTAMP WITHOUT TIME ZONE,
  CONSTRAINT pk_course PRIMARY KEY (id),
  CONSTRAINT uq_courses_for_name UNIQUE (name)
  );

 CREATE TABLE IF NOT EXISTS courses_technologies (
  course_id BIGINT not null,
  technology_id BIGINT NOT NULL,
  CONSTRAINT pk_cources_technologies primary key (course_id, technology_id),
  CONSTRAINT fk_comeve_on_course foreign key (course_id) references courses (id),
  CONSTRAINT fk_comeve_on_technology foreign key (technology_id) references technologies (id)
);

CREATE TABLE IF NOT EXISTS employees_courses (
  employee_id BIGINT NOT null,
  course_id BIGINT NOT null,
  CONSTRAINT pk_employees_courses primary key (employee_id, course_id),
  CONSTRAINT fk_comeve_on_course foreign key (course_id) references courses (id),
  CONSTRAINT fk_comeve_on_employee foreign key (employee_id) references employees (id)
);
